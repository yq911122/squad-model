import tensorflow as tf

import models


def char_embedding(x, emb_mat, cell, seqlen, hidden, keep_prob, is_train, reuse=False, birnn=True): # The character-level embeddings are generated by taking the final hidden states of a bi-directional recurrent neural network (RNN) applied to embeddings of characters in the token
    embed = tf.nn.embedding_lookup(emb_mat, x)
    if birnn:
        cell_fw = models._create_cell(hidden, keep_prob, cell, "fw_cell", reuse=reuse, is_train=is_train)
        cell_bw = models._create_cell(hidden, keep_prob, cell, "bw_cell", reuse=reuse, is_train=is_train)
        _, (state_fw, state_bw) = tf.nn.bidirectional_dynamic_rnn(cell_fw, cell_bw, embed, seqlen, dtype=tf.float32)
        outputs = tf.concat([state_fw, state_bw], axis=1)
    else:
        cell = models._create_cell(hidden, keep_prob, cell, "cell", reuse=reuse, is_train=is_train)
        _, state = tf.nn.dynamic_rnn(cell, embed, seqlen, dtype=tf.float32)
        outputs = state
    return outputs
